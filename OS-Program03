using System;
using System.Collections;
using System.Collections.Generic;

using System.Threading;

namespace OC_3
{
    public static class MyQueue
    {
        public static Queue<int> Queue = new Queue<int>(200);
        public static int SIZE = 250;

        public static void Fill()
        {
            for (int i = 0; i < SIZE; i++)
            {
                Queue.Enqueue(i);
            }
        }
    }

    public class Generator
    {
        private static Random rnd;

        public void Generate()
        {
            rnd = new Random();

            while (Menu.InMenu)
            {
                if (MyQueue.Queue.Count <= 130)
                {
                    Console.WriteLine("Счетчик элементов очереди <= 120 .\n  Генератор запущен.");
                    lock (MyQueue.Queue)
                    {
                        while (MyQueue.Queue.Count <= MyQueue.SIZE)
                        {
                            int next = rnd.Next(100);
                            MyQueue.Queue.Enqueue(next);
                            Console.WriteLine("Добавлено : " + next);
                            Thread.Sleep(100);
                        }
                        Console.WriteLine("Генератор завершил работу");
                    }
                }
                Thread.Sleep(200);
            }
        }
    }

    public class Consumer
    {
        public void Consume()
        {
            while (true)
            {
                lock (MyQueue.Queue)
                {
                    if (MyQueue.Queue.Count > 0)
                    {
                        Console.WriteLine("Израсходовано : " + MyQueue.Queue.Dequeue());
                    }
                    else
                    {
                        Console.WriteLine("Количество элементов в очереди = 0. Программа потребления останавливается.");
                        break;
                    }
                }
                Thread.Sleep(300);
            }
        }
    }

    public class Menu
    {
        public static bool InMenu = true;

        public static void Start()
        {
            new Thread(() =>
            {
                for (; ; ) if (Console.ReadKey(true).Key == ConsoleKey.Q)
                    {
                        InMenu = false;
                        Console.WriteLine("Программа отключится после того, как программа потребления закончит работу");
                    }
            })
            { IsBackground = true }.Start();

            Generator gen1 = new Generator();
            Generator gen2 = new Generator();
            Generator gen3 = new Generator();
            
            Consumer con1 = new Consumer();
            Consumer con2 = new Consumer();

            Thread tGen1 = new Thread(gen1.Generate);
            Thread tGen2 = new Thread(gen2.Generate);
            Thread tGen3 = new Thread(gen3.Generate);
            
            Thread tCons1 = new Thread(con1.Consume);
            Thread tCons2 = new Thread(con2.Consume);

            tCons1.Start();
            tCons2.Start();
            
            tGen1.Start();
            tGen2.Start();
            tGen3.Start();

        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            MyQueue.Fill();
            Menu.Start();
        }
    }
}
